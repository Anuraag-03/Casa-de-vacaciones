{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Clones\\\\Casa-de-vacaciones\\\\frontend\\\\src\\\\providers\\\\MapProvider.jsx\";\nimport React, { useRef } from 'react';\nimport axios from 'axios';\nimport tt from '@tomtom-international/web-sdk-maps';\nconst {\n  createContext,\n  useContext\n} = React;\nconst MapContext = createContext(null);\nexport const MapProvider = ({\n  children,\n  apiKey\n}) => {\n  const cache = useRef({});\n\n  const normalizeLocation = location => {\n    return location.replace(/\\s/g, '').toLowerCase();\n  };\n\n  const cacheLocation = (location, position) => {\n    const locationKey = normalizeLocation(location);\n    return cache.current[locationKey] = position;\n  };\n\n  const getCachedLocation = location => {\n    const locationKey = normalizeLocation(location);\n    return cache.current[locationKey];\n  };\n\n  const initMap = () => {\n    const map = tt.map({\n      key: apiKey,\n      container: 'freshbnb-map',\n      style: 'tomtom://vector/1/basic-main',\n      zoom: 15\n    });\n    map.addControl(new tt.NavigationControl());\n    return map;\n  };\n\n  const setCenter = (map, position) => {\n    map.setCenter(new tt.LngLat(position.lon, position.lat));\n  };\n\n  const addMarker = (map, position) => {\n    const markerDiv = document.createElement('div');\n    markerDiv.className = 'freshbnb-marker';\n    new tt.Marker({\n      element: markerDiv\n    }).setLngLat([position.lon, position.lat]).addTo(map);\n  };\n\n  const addPopupMessage = (map, message) => {\n    new tt.Popup({\n      className: 'freshbnb-popup',\n      closeButton: false,\n      closeOnClick: false\n    }).setLngLat(new tt.LngLat(0, 0)).setHTML(`<p>${message}</p>`).addTo(map);\n  };\n\n  const getGeoPosition = location => {\n    const cachedPosition = getCachedLocation(location);\n    return cachedPosition ? Promise.resolve(cachedPosition) : requestGeoLocation(location);\n  };\n\n  const requestGeoLocation = location => {\n    const requestUrl = `https://api.tomtom.com/search/2/geocode/${location}.JSON?key=${apiKey}`;\n    return axios.get(requestUrl).then(res => res.data).then(tomResponse => {\n      const results = tomResponse.results;\n\n      if (results && results.length > 0) {\n        const {\n          position\n        } = results[0];\n        cacheLocation(location, position);\n        return position;\n      } else return Promise.reject('Location not Found');\n    }).catch(() => Promise.reject('Location not Found'));\n  };\n\n  const mapApi = {\n    initMap,\n    getGeoPosition,\n    setCenter,\n    addMarker,\n    addPopupMessage\n  };\n  return /*#__PURE__*/React.createElement(MapContext.Provider, {\n    value: mapApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }, children);\n};\nexport const useMap = () => useContext(MapContext);","map":{"version":3,"sources":["D:/GitHub/Clones/Casa-de-vacaciones/frontend/src/providers/MapProvider.jsx"],"names":["React","useRef","axios","tt","createContext","useContext","MapContext","MapProvider","children","apiKey","cache","normalizeLocation","location","replace","toLowerCase","cacheLocation","position","locationKey","current","getCachedLocation","initMap","map","key","container","style","zoom","addControl","NavigationControl","setCenter","LngLat","lon","lat","addMarker","markerDiv","document","createElement","className","Marker","element","setLngLat","addTo","addPopupMessage","message","Popup","closeButton","closeOnClick","setHTML","getGeoPosition","cachedPosition","Promise","resolve","requestGeoLocation","requestUrl","get","then","res","data","tomResponse","results","length","reject","catch","mapApi","useMap"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport axios from 'axios';\r\nimport tt from '@tomtom-international/web-sdk-maps';\r\n\r\nconst { createContext, useContext } = React;\r\nconst MapContext = createContext(null);\r\n\r\nexport const MapProvider = ({ children, apiKey }) => {\r\n  const cache = useRef({});\r\n\r\n  const normalizeLocation = (location) => {\r\n    return location.replace(/\\s/g, '').toLowerCase();\r\n  };\r\n\r\n  const cacheLocation = (location, position) => {\r\n    const locationKey = normalizeLocation(location);\r\n    return (cache.current[locationKey] = position);\r\n  };\r\n\r\n  const getCachedLocation = (location) => {\r\n    const locationKey = normalizeLocation(location);\r\n    return cache.current[locationKey];\r\n  };\r\n\r\n  const initMap = () => {\r\n    const map = tt.map({\r\n      key: apiKey,\r\n      container: 'freshbnb-map',\r\n      style: 'tomtom://vector/1/basic-main',\r\n      zoom: 15,\r\n    });\r\n    map.addControl(new tt.NavigationControl());\r\n    return map;\r\n  };\r\n\r\n  const setCenter = (map, position) => {\r\n    map.setCenter(new tt.LngLat(position.lon, position.lat));\r\n  };\r\n\r\n  const addMarker = (map, position) => {\r\n    const markerDiv = document.createElement('div');\r\n    markerDiv.className = 'freshbnb-marker';\r\n    new tt.Marker({ element: markerDiv })\r\n      .setLngLat([position.lon, position.lat])\r\n      .addTo(map);\r\n  };\r\n\r\n  const addPopupMessage = (map, message) => {\r\n    new tt.Popup({\r\n      className: 'freshbnb-popup',\r\n      closeButton: false,\r\n      closeOnClick: false,\r\n    })\r\n      .setLngLat(new tt.LngLat(0, 0))\r\n      .setHTML(`<p>${message}</p>`)\r\n      .addTo(map);\r\n  };\r\n\r\n  const getGeoPosition = (location) => {\r\n    const cachedPosition = getCachedLocation(location);\r\n    return cachedPosition\r\n      ? Promise.resolve(cachedPosition)\r\n      : requestGeoLocation(location);\r\n  };\r\n\r\n  const requestGeoLocation = (location) => {\r\n    const requestUrl = `https://api.tomtom.com/search/2/geocode/${location}.JSON?key=${apiKey}`;\r\n    return axios\r\n      .get(requestUrl)\r\n      .then((res) => res.data)\r\n      .then((tomResponse) => {\r\n        const results = tomResponse.results;\r\n        if (results && results.length > 0) {\r\n          const { position } = results[0];\r\n          cacheLocation(location, position);\r\n          return position;\r\n        } else return Promise.reject('Location not Found');\r\n      })\r\n      .catch(() => Promise.reject('Location not Found'));\r\n  };\r\n\r\n  const mapApi = {\r\n    initMap,\r\n    getGeoPosition,\r\n    setCenter,\r\n    addMarker,\r\n    addPopupMessage,\r\n  };\r\n\r\n  return <MapContext.Provider value={mapApi}>{children}</MapContext.Provider>;\r\n};\r\n\r\nexport const useMap = () => useContext(MapContext);\r\n"]},"metadata":{},"sourceType":"module"}