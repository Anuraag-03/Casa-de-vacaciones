{"ast":null,"code":"import { extractApiErrors } from 'helpers/functions';\nimport axiosService from './axiosService';\nconst {\n  freshbnbAxios\n} = axiosService;\n\nconst queryRentals = async () => {\n  try {\n    const res = await freshbnbAxios.get('/rentals/me');\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst queryBookings = async () => {\n  try {\n    const res = await freshbnbAxios.get('/bookings/me');\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst queryRecievedBookings = async () => {\n  try {\n    const res = await freshbnbAxios.get('/bookings/received');\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst deleteRental = async rentalId => {\n  try {\n    const res = await freshbnbAxios.delete(`/rentals/${rentalId}`);\n    return res.data;\n  } catch (error) {\n    return Promise.reject(extractApiErrors(error.response || {}));\n  }\n};\n\nconst deleteBooking = async bookingId => {\n  try {\n    const res = await freshbnbAxios.delete(`/bookings/${bookingId}`);\n    return res.data;\n  } catch (error) {\n    return Promise.reject(extractApiErrors(error.response || {}));\n  }\n};\n\nconst updateRental = async (rental, rentalId) => {\n  try {\n    const res = await freshbnbAxios.patch(`/rentals/${rentalId}`, rental);\n    return res.data;\n  } catch (error) {\n    return Promise.reject(extractApiErrors(error.response || {}));\n  }\n};\n\nexport default {\n  queryRentals,\n  queryBookings,\n  queryRecievedBookings,\n  deleteRental,\n  deleteBooking,\n  updateRental\n};","map":{"version":3,"sources":["D:/MyProjects/8.MinorProject-I-Sem-V-Casa de Vacciones/frontend/src/services/manageService.js"],"names":["extractApiErrors","axiosService","freshbnbAxios","queryRentals","res","get","data","error","console","log","queryBookings","queryRecievedBookings","deleteRental","rentalId","delete","Promise","reject","response","deleteBooking","bookingId","updateRental","rental","patch"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,YAA1B;;AAEA,MAAME,YAAY,GAAG,YAAY;AAC/B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMF,aAAa,CAACG,GAAd,CAAkB,aAAlB,CAAlB;AACA,WAAOD,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPD;;AASA,MAAMG,aAAa,GAAG,YAAY;AAChC,MAAI;AACF,UAAMN,GAAG,GAAG,MAAMF,aAAa,CAACG,GAAd,CAAkB,cAAlB,CAAlB;AACA,WAAOD,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPD;;AASA,MAAMI,qBAAqB,GAAG,YAAY;AACxC,MAAI;AACF,UAAMP,GAAG,GAAG,MAAMF,aAAa,CAACG,GAAd,CAAkB,oBAAlB,CAAlB;AACA,WAAOD,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPD;;AASA,MAAMK,YAAY,GAAG,MAAOC,QAAP,IAAoB;AACvC,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMF,aAAa,CAACY,MAAd,CAAsB,YAAWD,QAAS,EAA1C,CAAlB;AACA,WAAOT,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOQ,OAAO,CAACC,MAAR,CAAehB,gBAAgB,CAACO,KAAK,CAACU,QAAN,IAAkB,EAAnB,CAA/B,CAAP;AACD;AACF,CAPD;;AASA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAI;AACF,UAAMf,GAAG,GAAG,MAAMF,aAAa,CAACY,MAAd,CAAsB,aAAYK,SAAU,EAA5C,CAAlB;AACA,WAAOf,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOQ,OAAO,CAACC,MAAR,CAAehB,gBAAgB,CAACO,KAAK,CAACU,QAAN,IAAkB,EAAnB,CAA/B,CAAP;AACD;AACF,CAPD;;AASA,MAAMG,YAAY,GAAG,OAAOC,MAAP,EAAeR,QAAf,KAA4B;AAC/C,MAAI;AACF,UAAMT,GAAG,GAAG,MAAMF,aAAa,CAACoB,KAAd,CAAqB,YAAWT,QAAS,EAAzC,EAA4CQ,MAA5C,CAAlB;AACA,WAAOjB,GAAG,CAACE,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOQ,OAAO,CAACC,MAAR,CAAehB,gBAAgB,CAACO,KAAK,CAACU,QAAN,IAAkB,EAAnB,CAA/B,CAAP;AACD;AACF,CAPD;;AASA,eAAe;AACbd,EAAAA,YADa;AAEbO,EAAAA,aAFa;AAGbC,EAAAA,qBAHa;AAIbC,EAAAA,YAJa;AAKbM,EAAAA,aALa;AAMbE,EAAAA;AANa,CAAf","sourcesContent":["import { extractApiErrors } from 'helpers/functions';\r\nimport axiosService from './axiosService';\r\nconst { freshbnbAxios } = axiosService;\r\n\r\nconst queryRentals = async () => {\r\n  try {\r\n    const res = await freshbnbAxios.get('/rentals/me');\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst queryBookings = async () => {\r\n  try {\r\n    const res = await freshbnbAxios.get('/bookings/me');\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst queryRecievedBookings = async () => {\r\n  try {\r\n    const res = await freshbnbAxios.get('/bookings/received');\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst deleteRental = async (rentalId) => {\r\n  try {\r\n    const res = await freshbnbAxios.delete(`/rentals/${rentalId}`);\r\n    return res.data;\r\n  } catch (error) {\r\n    return Promise.reject(extractApiErrors(error.response || {}));\r\n  }\r\n};\r\n\r\nconst deleteBooking = async (bookingId) => {\r\n  try {\r\n    const res = await freshbnbAxios.delete(`/bookings/${bookingId}`);\r\n    return res.data;\r\n  } catch (error) {\r\n    return Promise.reject(extractApiErrors(error.response || {}));\r\n  }\r\n};\r\n\r\nconst updateRental = async (rental, rentalId) => {\r\n  try {\r\n    const res = await freshbnbAxios.patch(`/rentals/${rentalId}`, rental);\r\n    return res.data;\r\n  } catch (error) {\r\n    return Promise.reject(extractApiErrors(error.response || {}));\r\n  }\r\n};\r\n\r\nexport default {\r\n  queryRentals,\r\n  queryBookings,\r\n  queryRecievedBookings,\r\n  deleteRental,\r\n  deleteBooking,\r\n  updateRental,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}