{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProjects\\\\8.MinorProject-I-Sem-V-Casa de Vacciones\\\\frontend\\\\src\\\\components\\\\forms\\\\RegisterForm.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { sameAs } from 'helpers/validators';\nimport { Button } from 'components/app'; // eslint-disable-next-line\n\nconst EMAIL_PATTERN = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst RegisterForm = ({\n  onSubmit\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues\n  } = useForm();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true,\n      minLength: 3\n    }),\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input__notValid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, errors.username.type === 'required' && 'Username is Required', errors.username.type === 'minLength' && 'Username must 3 characters minimum')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true,\n      pattern: EMAIL_PATTERN\n    }),\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input__notValid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, errors.email.type === 'required' && 'Email is Required', errors.email.type === 'pattern' && 'Not Valid Email Format')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true,\n      minLength: 6\n    }),\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input__notValid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, errors.password.type === 'required' && 'Password is Required', errors.password.type === 'minLength' && 'Password must 6 characters minimum')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true,\n      minLength: 6,\n      validate: {\n        sameAs: sameAs('password', getValues)\n      }\n    }),\n    type: \"password\",\n    name: \"passwordConfirm\",\n    id: \"passwordConfirm\",\n    placeholder: \"ConfirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), errors.passwordConfirm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input__notValid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, errors.passwordConfirm.type === 'required' && 'Password Confirmation is Required', errors.passwordConfirm.type === 'minLength' && 'Password Confirmation must 6 characters minimum', errors.passwordConfirm.type === 'sameAs' && 'Password Confirmation must match with Password'))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 34\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Button, {\n    text: \"Continue\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["D:/MyProjects/8.MinorProject-I-Sem-V-Casa de Vacciones/frontend/src/components/forms/RegisterForm.jsx"],"names":["React","Link","useForm","sameAs","Button","EMAIL_PATTERN","RegisterForm","onSubmit","register","handleSubmit","errors","getValues","required","minLength","username","type","pattern","email","password","validate","passwordConfirm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { sameAs } from 'helpers/validators';\r\n\r\nimport { Button } from 'components/app';\r\n\r\n// eslint-disable-next-line\r\nconst EMAIL_PATTERN = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst RegisterForm = ({ onSubmit }) => {\r\n  const { register, handleSubmit, errors, getValues } = useForm();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className='inputs'>\r\n        <div className='input'>\r\n          <input\r\n            ref={register({ required: true, minLength: 3 })}\r\n            type='text'\r\n            name='username'\r\n            id='username'\r\n            placeholder='Username'\r\n          />\r\n          {errors.username && (\r\n            <div className='input__notValid'>\r\n              {errors.username.type === 'required' && 'Username is Required'}\r\n              {errors.username.type === 'minLength' &&\r\n                'Username must 3 characters minimum'}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='input'>\r\n          <input\r\n            ref={register({ required: true, pattern: EMAIL_PATTERN })}\r\n            type='email'\r\n            name='email'\r\n            id='email'\r\n            placeholder='Email'\r\n          />\r\n          {errors.email && (\r\n            <div className='input__notValid'>\r\n              {errors.email.type === 'required' && 'Email is Required'}\r\n              {errors.email.type === 'pattern' && 'Not Valid Email Format'}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='input'>\r\n          <input\r\n            ref={register({ required: true, minLength: 6 })}\r\n            type='password'\r\n            name='password'\r\n            id='password'\r\n            placeholder='Password'\r\n          />\r\n          {errors.password && (\r\n            <div className='input__notValid'>\r\n              {errors.password.type === 'required' && 'Password is Required'}\r\n              {errors.password.type === 'minLength' &&\r\n                'Password must 6 characters minimum'}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='input'>\r\n          <input\r\n            ref={register({\r\n              required: true,\r\n              minLength: 6,\r\n              validate: { sameAs: sameAs('password', getValues) },\r\n            })}\r\n            type='password'\r\n            name='passwordConfirm'\r\n            id='passwordConfirm'\r\n            placeholder='ConfirmPassword'\r\n          />\r\n          {errors.passwordConfirm && (\r\n            <div className='input__notValid'>\r\n              {errors.passwordConfirm.type === 'required' &&\r\n                'Password Confirmation is Required'}\r\n              {errors.passwordConfirm.type === 'minLength' &&\r\n                'Password Confirmation must 6 characters minimum'}\r\n              {errors.passwordConfirm.type === 'sameAs' &&\r\n                'Password Confirmation must match with Password'}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p>\r\n        Already have an account? <Link to='/login'>Login</Link>\r\n      </p>\r\n      <Button text='Continue' type='submit' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}