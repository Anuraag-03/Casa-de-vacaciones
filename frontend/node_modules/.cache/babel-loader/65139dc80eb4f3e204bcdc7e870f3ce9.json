{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Clones\\\\Casa-de-vacaciones\\\\frontend\\\\src\\\\components\\\\map\\\\TomMap.jsx\";\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useMap } from 'providers/MapProvider';\n\nconst TomMap = ({\n  location\n}) => {\n  const map = useRef(null);\n  const mapService = useMap();\n  const getGeoLocation = useCallback(location => {\n    const fullAdress = `${location.city},${location.street}`;\n    mapService.getGeoPosition(fullAdress).then(position => {\n      mapService.setCenter(map.current, position);\n      mapService.addMarker(map.current, position);\n    }).catch(error => mapService.addPopupMessage(map.current, error)); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    getGeoLocation(location);\n  }, [location, getGeoLocation]);\n  useEffect(() => {\n    map.current = mapService.initMap(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"freshbnb-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default TomMap;","map":{"version":3,"sources":["D:/GitHub/Clones/Casa-de-vacaciones/frontend/src/components/map/TomMap.jsx"],"names":["React","useEffect","useCallback","useRef","useMap","TomMap","location","map","mapService","getGeoLocation","fullAdress","city","street","getGeoPosition","then","position","setCenter","current","addMarker","catch","error","addPopupMessage","initMap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAMC,GAAG,GAAGJ,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMK,UAAU,GAAGJ,MAAM,EAAzB;AAEA,QAAMK,cAAc,GAAGP,WAAW,CAAEI,QAAD,IAAc;AAC/C,UAAMI,UAAU,GAAI,GAAEJ,QAAQ,CAACK,IAAK,IAAGL,QAAQ,CAACM,MAAO,EAAvD;AACAJ,IAAAA,UAAU,CACPK,cADH,CACkBH,UADlB,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClBP,MAAAA,UAAU,CAACQ,SAAX,CAAqBT,GAAG,CAACU,OAAzB,EAAkCF,QAAlC;AACAP,MAAAA,UAAU,CAACU,SAAX,CAAqBX,GAAG,CAACU,OAAzB,EAAkCF,QAAlC;AACD,KALH,EAMGI,KANH,CAMUC,KAAD,IAAWZ,UAAU,CAACa,eAAX,CAA2Bd,GAAG,CAACU,OAA/B,EAAwCG,KAAxC,CANpB,EAF+C,CAS/C;AACD,GAViC,EAU/B,EAV+B,CAAlC;AAYAnB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,cAAc,CAACH,QAAD,CAAd;AACD,GAFQ,EAEN,CAACA,QAAD,EAAWG,cAAX,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACU,OAAJ,GAAcT,UAAU,CAACc,OAAX,EAAd,CADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1BD;;AA4BA,eAAejB,MAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\r\nimport { useMap } from 'providers/MapProvider';\r\n\r\nconst TomMap = ({ location }) => {\r\n  const map = useRef(null);\r\n  const mapService = useMap();\r\n\r\n  const getGeoLocation = useCallback((location) => {\r\n    const fullAdress = `${location.city},${location.street}`;\r\n    mapService\r\n      .getGeoPosition(fullAdress)\r\n      .then((position) => {\r\n        mapService.setCenter(map.current, position);\r\n        mapService.addMarker(map.current, position);\r\n      })\r\n      .catch((error) => mapService.addPopupMessage(map.current, error));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getGeoLocation(location);\r\n  }, [location, getGeoLocation]);\r\n\r\n  useEffect(() => {\r\n    map.current = mapService.initMap();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return <div id='freshbnb-map'></div>;\r\n};\r\n\r\nexport default TomMap;\r\n"]},"metadata":{},"sourceType":"module"}