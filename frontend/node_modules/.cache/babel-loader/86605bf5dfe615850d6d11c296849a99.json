{"ast":null,"code":"import rentalsServices from 'services/rentalsService';\nexport const loadRentals = location => async dispatch => {\n  try {\n    const rentals = await rentalsServices.query(location);\n    dispatch({\n      type: 'SET_RENTALS',\n      payload: rentals\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const clearRentals = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'CLEAR_RENTALS'\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const loadRental = rentalId => async dispatch => {\n  try {\n    const rental = await rentalsServices.getById(rentalId);\n    dispatch({\n      type: 'SET_RENTAL',\n      payload: rental\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const clearRental = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'CLEAR_RENTAL'\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addRental = rental => async dispatch => {\n  try {\n    const newRental = rentalsServices.add(rental);\n    dispatch({\n      type: 'ADD_RENTAL',\n      payload: newRental\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/GitHub/Clones/Casa-de-vacaciones/frontend/src/store/rentals/actions.js"],"names":["rentalsServices","loadRentals","location","dispatch","rentals","query","type","payload","err","console","log","clearRentals","error","loadRental","rentalId","rental","getById","clearRental","addRental","newRental","add"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC3D,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMJ,eAAe,CAACK,KAAhB,CAAsBH,QAAtB,CAAtB;AACAC,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMG,YAAY,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD,CAEE,OAAOM,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAOX,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMY,MAAM,GAAG,MAAMf,eAAe,CAACgB,OAAhB,CAAwBF,QAAxB,CAArB;AACAX,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEQ;AAA/B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMK,WAAW,GAAG,MAAM,MAAOd,QAAP,IAAoB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD,CAEE,OAAOM,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMM,SAAS,GAAIH,MAAD,IAAY,MAAOZ,QAAP,IAAoB;AACvD,MAAI;AACF,UAAMgB,SAAS,GAAGnB,eAAe,CAACoB,GAAhB,CAAoBL,MAApB,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAEY;AAA/B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,CAPM","sourcesContent":["import rentalsServices from 'services/rentalsService';\r\n\r\nexport const loadRentals = (location) => async (dispatch) => {\r\n  try {\r\n    const rentals = await rentalsServices.query(location);\r\n    dispatch({ type: 'SET_RENTALS', payload: rentals });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const clearRentals = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'CLEAR_RENTALS' });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const loadRental = (rentalId) => async (dispatch) => {\r\n  try {\r\n    const rental = await rentalsServices.getById(rentalId);\r\n    dispatch({ type: 'SET_RENTAL', payload: rental });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const clearRental = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'CLEAR_RENTAL' });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const addRental = (rental) => async (dispatch) => {\r\n  try {\r\n    const newRental = rentalsServices.add(rental);\r\n    dispatch({ type: 'ADD_RENTAL', payload: newRental });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}