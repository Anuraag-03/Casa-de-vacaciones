{"ast":null,"code":"import manageService from 'services/manageService';\nexport const loadMyRentals = () => async dispatch => {\n  try {\n    const myRentals = await manageService.queryRentals();\n    dispatch({\n      type: 'SET_MY_RENTALS',\n      payload: myRentals\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const clearMyRentals = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'CLEAR_MY_RENTALS'\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const loadMyBookings = () => async dispatch => {\n  try {\n    const myBookings = await manageService.queryBookings();\n    dispatch({\n      type: 'SET_MY_BOOKINGS',\n      payload: myBookings\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const clearMyBookings = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'CLEAR_MY_BOOKINGS'\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const loadReceivedBookings = () => async dispatch => {\n  try {\n    const receivedBookings = await manageService.queryRecievedBookings();\n    dispatch({\n      type: 'SET_RECEIVED_BOOKINGS',\n      payload: receivedBookings\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const clearReceivedBookings = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'CLEAR_RECEIVED_BOOKINGS'\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteMyRental = rentalId => async dispatch => {\n  try {\n    await manageService.deleteRental(rentalId);\n    dispatch({\n      type: 'DELETE_MY_RENTAL',\n      payload: rentalId\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: error\n    });\n  }\n};\nexport const deleteMyBooking = bookingId => async dispatch => {\n  try {\n    await manageService.deleteBooking(bookingId);\n    dispatch({\n      type: 'DELETE_MY_BOOKING',\n      payload: bookingId\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: error\n    });\n  }\n};\nexport const updateMyRental = (rental, rentalId) => async dispatch => {\n  try {\n    const updatedRental = await manageService.updateRental(rental, rentalId);\n    dispatch({\n      type: 'UPDATE_MY_RENTAL',\n      payload: updatedRental\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["D:/MyProjects/8.MinorProject-I-Sem-V-Casa de Vacciones/frontend/src/store/manage/actions.js"],"names":["manageService","loadMyRentals","dispatch","myRentals","queryRentals","type","payload","err","console","log","clearMyRentals","loadMyBookings","myBookings","queryBookings","clearMyBookings","loadReceivedBookings","receivedBookings","queryRecievedBookings","clearReceivedBookings","deleteMyRental","rentalId","deleteRental","error","deleteMyBooking","bookingId","deleteBooking","updateMyRental","rental","updatedRental","updateRental"],"mappings":"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","sourcesContent":["import manageService from 'services/manageService';\r\n\r\nexport const loadMyRentals = () => async (dispatch) => {\r\n  try {\r\n    const myRentals = await manageService.queryRentals();\r\n    dispatch({ type: 'SET_MY_RENTALS', payload: myRentals });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const clearMyRentals = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'CLEAR_MY_RENTALS' });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const loadMyBookings = () => async (dispatch) => {\r\n  try {\r\n    const myBookings = await manageService.queryBookings();\r\n    dispatch({ type: 'SET_MY_BOOKINGS', payload: myBookings });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const clearMyBookings = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'CLEAR_MY_BOOKINGS' });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const loadReceivedBookings = () => async (dispatch) => {\r\n  try {\r\n    const receivedBookings = await manageService.queryRecievedBookings();\r\n    dispatch({ type: 'SET_RECEIVED_BOOKINGS', payload: receivedBookings });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const clearReceivedBookings = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'CLEAR_RECEIVED_BOOKINGS' });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const deleteMyRental = (rentalId) => async (dispatch) => {\r\n  try {\r\n    await manageService.deleteRental(rentalId);\r\n    dispatch({ type: 'DELETE_MY_RENTAL', payload: rentalId });\r\n  } catch (error) {\r\n    dispatch({ type: 'SET_ERRORS', payload: error });\r\n  }\r\n};\r\n\r\nexport const deleteMyBooking = (bookingId) => async (dispatch) => {\r\n  try {\r\n    await manageService.deleteBooking(bookingId);\r\n    dispatch({ type: 'DELETE_MY_BOOKING', payload: bookingId });\r\n  } catch (error) {\r\n    dispatch({ type: 'SET_ERRORS', payload: error });\r\n  }\r\n};\r\n\r\nexport const updateMyRental = (rental, rentalId) => async (dispatch) => {\r\n  try {\r\n    const updatedRental = await manageService.updateRental(rental, rentalId);\r\n    dispatch({ type: 'UPDATE_MY_RENTAL', payload: updatedRental });\r\n  } catch (error) {\r\n    dispatch({ type: 'SET_ERRORS', payload: error });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}