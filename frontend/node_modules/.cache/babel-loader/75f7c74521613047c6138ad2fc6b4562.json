{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyProjects\\\\8.MinorProject-I-Sem-V-Casa de Vacciones\\\\frontend\\\\src\\\\providers\\\\AuthProvider.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport jwt from 'jsonwebtoken';\nimport moment from 'moment';\nimport { loginUser } from 'services/authServices';\nconst {\n  createContext,\n  useContext\n} = React;\nconst AuthContext = createContext(null);\n\nconst AuthBaseProvider = ({\n  children,\n  dispatch\n}) => {\n  const isAuthenticated = () => {\n    const decodedToken = decodeToken(getToken());\n    console.log(decodedToken);\n    return decodedToken && isTokenValid(decodedToken);\n  };\n\n  const checkAuthState = () => {\n    const decodedToken = decodeToken(getToken());\n\n    if (decodedToken && isTokenValid(decodedToken)) {\n      dispatch({\n        type: 'USER_AUTHENTICATED',\n        payload: decodedToken\n      });\n    }\n  };\n\n  const isTokenValid = decodedToken => decodedToken && moment().isBefore(getExpiration(decodedToken));\n\n  const getExpiration = decodedToken => moment.unix(decodedToken.exp);\n\n  const getToken = () => localStorage.getItem('freshbnb_token');\n\n  const decodeToken = token => jwt.decode(token);\n\n  const logout = () => {\n    localStorage.removeItem('freshbnb_token');\n    dispatch({\n      type: 'USER_LOGOUT'\n    });\n  };\n\n  const login = userData => {\n    return loginUser(userData).then(token => {\n      localStorage.setItem('freshbnb_token', token);\n      const decodedToken = decodeToken(token);\n      dispatch({\n        type: 'USER_AUTHENTICATED',\n        payload: decodedToken\n      });\n      return token;\n    });\n  };\n\n  const authApi = {\n    login,\n    logout,\n    checkAuthState,\n    isAuthenticated\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: authApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport const AuthProvider = connect()(AuthBaseProvider);\nexport const useAuth = () => useContext(AuthContext);\nexport const withAuth = Component => props => /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }\n}, authApi => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n  auth: authApi,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 19\n  }\n})));","map":{"version":3,"sources":["D:/MyProjects/8.MinorProject-I-Sem-V-Casa de Vacciones/frontend/src/providers/AuthProvider.jsx"],"names":["React","connect","jwt","moment","loginUser","createContext","useContext","AuthContext","AuthBaseProvider","children","dispatch","isAuthenticated","decodedToken","decodeToken","getToken","console","log","isTokenValid","checkAuthState","type","payload","isBefore","getExpiration","unix","exp","localStorage","getItem","token","decode","logout","removeItem","login","userData","then","setItem","authApi","AuthProvider","useAuth","withAuth","Component","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport jwt from 'jsonwebtoken';\r\nimport moment from 'moment';\r\n\r\nimport { loginUser } from 'services/authServices';\r\n\r\nconst { createContext, useContext } = React;\r\nconst AuthContext = createContext(null);\r\n\r\nconst AuthBaseProvider = ({ children, dispatch }) => {\r\n  const isAuthenticated = () => {\r\n    const decodedToken = decodeToken(getToken());\r\n    console.log(decodedToken)\r\n    return decodedToken && isTokenValid(decodedToken);\r\n  };\r\n\r\n  const checkAuthState = () => {\r\n    const decodedToken = decodeToken(getToken());\r\n    if (decodedToken && isTokenValid(decodedToken)) {\r\n      dispatch({ type: 'USER_AUTHENTICATED', payload: decodedToken });\r\n    }\r\n  };\r\n\r\n  const isTokenValid = (decodedToken) =>\r\n    decodedToken && moment().isBefore(getExpiration(decodedToken));\r\n\r\n  const getExpiration = (decodedToken) => moment.unix(decodedToken.exp);\r\n\r\n  const getToken = () => localStorage.getItem('freshbnb_token');\r\n\r\n  const decodeToken = (token) => jwt.decode(token);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('freshbnb_token');\r\n    dispatch({ type: 'USER_LOGOUT' });\r\n  };\r\n\r\n  const login = (userData) => {\r\n    return loginUser(userData).then((token) => {\r\n      localStorage.setItem('freshbnb_token', token);\r\n      const decodedToken = decodeToken(token);\r\n      dispatch({ type: 'USER_AUTHENTICATED', payload: decodedToken });\r\n      return token;\r\n    });\r\n  };\r\n\r\n  const authApi = {\r\n    login,\r\n    logout,\r\n    checkAuthState,\r\n    isAuthenticated,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authApi}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const AuthProvider = connect()(AuthBaseProvider);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const withAuth = (Component) => (props) => (\r\n  <AuthContext.Consumer>\r\n    {(authApi) => <Component {...props} auth={authApi} />}\r\n  </AuthContext.Consumer>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}